{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { Config } from 'mixpanel-browser';\n\nexport interface MixpanelPlugin {\n  initialize(option: {\n    token: string;\n    config?: Partial<Config>;\n  }): Promise<void>;\n  distinctId(): Promise<{ value: string }>;\n  track(options: { event: string; properties: any }): Promise<void>;\n  identify(options: { distinctId: string }): Promise<void>;\n  alias(options: { alias: string; distinctId: string }): Promise<void>;\n  reset(): Promise<void>;\n  clearSuperProperties(): Promise<void>;\n  currentSuperProperties(): Promise<{ properties: any }>;\n  registerSuperProperties(options: { properties: any }): Promise<void>;\n  setProfile(options: { properties: any }): Promise<void>;\n  setProfileUnion(options: { properties: any }): Promise<void>;\n  trackCharge(options: { amount: number; properties: any }): Promise<void>;\n  flush(): Promise<void>;\n}\n"]}