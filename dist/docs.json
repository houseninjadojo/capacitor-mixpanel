{
  "api": {
    "name": "MixpanelPlugin",
    "slug": "mixpanelplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "initialize",
        "signature": "(options: { token: string; autotrack?: boolean; optOutByDefault?: boolean; debug?: boolean; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ token: string; autotrack?: boolean | undefined; optOutByDefault?: boolean | undefined; debug?: boolean | undefined; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "initialize"
      },
      {
        "name": "distinctId",
        "signature": "() => Promise<{ value: string; }>",
        "parameters": [],
        "returns": "Promise<{ value: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "distinctid"
      },
      {
        "name": "track",
        "signature": "(options: { event: string; properties: any; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ event: string; properties: any; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "track"
      },
      {
        "name": "identify",
        "signature": "(options: { distinctId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ distinctId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "identify"
      },
      {
        "name": "alias",
        "signature": "(options: { alias: string; distinctId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ alias: string; distinctId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "alias"
      },
      {
        "name": "reset",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "reset"
      },
      {
        "name": "clearSuperProperties",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "clearsuperproperties"
      },
      {
        "name": "currentSuperProperties",
        "signature": "() => Promise<{ properties: any; }>",
        "parameters": [],
        "returns": "Promise<{ properties: any; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "currentsuperproperties"
      },
      {
        "name": "registerSuperProperties",
        "signature": "(options: { properties: any; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ properties: any; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "registersuperproperties"
      },
      {
        "name": "setProfile",
        "signature": "(options: { properties: any; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ properties: any; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setprofile"
      },
      {
        "name": "setProfileUnion",
        "signature": "(options: { properties: any; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ properties: any; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setprofileunion"
      },
      {
        "name": "deleteProfile",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "deleteprofile"
      },
      {
        "name": "trackCharge",
        "signature": "(options: { amount: number; properties: any; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ amount: number; properties: any; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "trackcharge"
      },
      {
        "name": "flush",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "flush"
      },
      {
        "name": "optInTracking",
        "signature": "(options: { distinctId?: string; properties?: any; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ distinctId?: string | undefined; properties?: any; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "optintracking"
      },
      {
        "name": "optOutTracking",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "optouttracking"
      }
    ],
    "properties": []
  },
  "interfaces": [],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": [
    {
      "name": "Mixpanel",
      "slug": "mixpanel",
      "properties": [
        {
          "name": "iosToken",
          "tags": [
            {
              "name": "required"
            },
            {
              "text": "\"asdf1234asdf1234\"",
              "name": "example"
            }
          ],
          "docs": "iOS Mixpanel Token.",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "androidToken",
          "tags": [
            {
              "name": "required"
            },
            {
              "text": "\"asdf1234asdf1234\"",
              "name": "example"
            }
          ],
          "docs": "Android Mixpanel Token.",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "trackAutomaticEvents",
          "tags": [
            {
              "name": "required"
            },
            {
              "text": "true",
              "name": "default"
            }
          ],
          "docs": "Optional. Whether or not to collect common mobile events. Default is true.",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "optOutTrackingByDefault",
          "tags": [
            {
              "name": "required"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Optional. Whether or not Mixpanel can start tracking immediately. Default is false.",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "serverURL",
          "tags": [
            {
              "text": "null",
              "name": "default"
            },
            {
              "text": "\"https://api-eu.mixpanel.com/\"",
              "name": "example"
            }
          ],
          "docs": "Optional. Mixpanel cluster URL or EU server URL. Defaults to US server.",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ],
      "docs": ""
    }
  ]
}